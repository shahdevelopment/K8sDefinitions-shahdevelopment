# #######################################################################################################################################
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: front-end-ingress
  namespace: profile-site
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/limit-rps: "10"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - "*.shah-kubernetes.ca"
    - "kubernetes.shah-kubernetes.ca"
    secretName: wildcard-certificate
  rules:
    - host: kubernetes.shah-kubernetes.ca
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: front-end-service
              port:
                number: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: back-end-ingress
  namespace: profile-site
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/limit-rps: "10" # Limit to 10 requests per second per client IP
    # nginx.ingress.kubernetes.io/whitelist-source-range-by-header: "X-Real-IP, X-Forwarded-For"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($http_origin !~* (^https?://(k8-backend\.shahsportfolio\.online|kubernetes\.shahsportfolio\.online|shahsportfolio\.online)$)) {       
        return 302 https://kubernetes.shah-kubernetes.ca/blocked;
      }
      add_header 'Access-Control-Allow-Origin' "$http_origin" always;
      add_header 'Access-Control-Allow-Methods' 'GET, PUT, POST, DELETE, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Authorization, X-Requested-With, Content-Type' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      add_header 'Vary' 'Origin' always;
      add_header 'Access-Control-Max-Age' '600' always;  # Optional: Cache preflight response
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - "*.shah-kubernetes.ca"
    - "k8-backend.shah-kubernetes.ca"
    secretName: wildcard-certificate
  rules:
    - host: k8-backend.shah-kubernetes.ca
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: back-end-service
              port:
                number: 9000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: postgres-ingress
  namespace: profile-site
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/limit-rps: "10" # Limit to 10 requests per second per client IP
    # nginx.ingress.kubernetes.io/whitelist-source-range-by-header: "X-Real-IP, X-Forwarded-For"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($http_origin !~* (^https?://(k8-backend\.shahsportfolio\.online|kubernetes\.shahsportfolio\.online|shahsportfolio\.online)$)) {       
        return 302 https://kubernetes.shah-kubernetes.ca/blocked;
      }
      add_header 'Access-Control-Allow-Origin' "$http_origin" always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Authorization, X-Requested-With, Content-Type' always;
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - "*.shah-kubernetes.ca"
    - "k8-db.shah-kubernetes.ca"
    secretName: wildcard-certificate
  rules:
    - host: k8-db.shah-kubernetes.ca
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: db-service
              port:
                number: 5432
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prometheus-ingress
  namespace: profile-site
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/limit-rps: "10" # Limit to 10 requests per second per client IP
      # auth_basic "Protected Prometheus";
      # auth_basic_user_file /etc/nginx/.htpasswd;
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - "*.shah-kubernetes.ca"
    - "prometheus.shah-kubernetes.ca"
    secretName: wildcard-certificate
  rules:
    - host: prometheus.shah-kubernetes.ca
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: prometheus
              port:
                number: 9090
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-ingress
  namespace: profile-site
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/limit-rps: "10" # Limit to 10 requests per second per client IP
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - "*.shah-kubernetes.ca"
    - "grafana.shah-kubernetes.ca"
    secretName: wildcard-certificate
  rules:
    - host: grafana.shah-kubernetes.ca
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: grafana
              port:
                number: 2000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rabbitmq-ingress
  namespace: profile-site
  annotations:
    # nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    # nginx.ingress.kubernetes.io/websocket-services: "rabbitmq"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
      add_header 'Access-Control-Allow-Headers' 'Content-Type,Authorization';
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - "*.shah-kubernetes.ca"
    - "rabbitmq.shah-kubernetes.ca"
    secretName: wildcard-certificate
  rules:
    - host: rabbitmq.shah-kubernetes.ca
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: rabbitmq
              port:
                number: 15672

# #######################################################################################################################################       
# #######################################################################################################################################