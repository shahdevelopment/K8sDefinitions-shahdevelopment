# #######################################################################################################################################
# #######################################################################################################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app
  namespace: profile-site
  labels:
    app: front-end
spec:
  replicas: 1
  selector:
    matchLabels:
      app: front-end
  template:
    metadata:
      labels:
        app: front-end
    spec:
      containers:
      - name: front-end-container
        image: {{.Values.frontimage}}
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 3000
        livenessProbe:
          exec:
            command:
              - curl
              - --fail
              - http://localhost:3000/health
      # Configure probe parameters (optional)
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
      # Define the probe command
          exec:
            command:
              - curl
              - --fail
              - http://localhost:3000/ready
          # Configure probe parameters (optional)
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        resources:
          requests:
            memory: 250Mi
            cpu: 100m
          limits:
            memory: 250Mi
            cpu: 300m
      imagePullSecrets:
      - name: secret-tiger-docker
# ############################################################
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-backend
  namespace: profile-site
  labels:
    app: back-end
spec:
  replicas: 1
  selector:
    matchLabels:
      app: back-end
  template:
    metadata:
      labels:
        app: back-end
    spec:
      containers:
      - name: back-end-container
        image: {{.Values.backimage}}
        imagePullPolicy: Always
        # volumeMounts:
        # - mountPath: "/usr/src/app/s3"
        #   name: s3-storage
        ports:
        - name: http
          containerPort: 9000
        livenessProbe:
          exec:
            command:
              - curl
              - --fail
              - http://localhost:9000/health
      # Configure probe parameters (optional)
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
      # Define the probe command
          exec:
            command:
              - curl
              - --fail
              - http://localhost:9000/ready
          # Configure probe parameters (optional)
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        resources:
          requests:
            memory: 250Mi
            cpu: 100m
          limits:
            memory: 250Mi
            cpu: 300m
      imagePullSecrets:
      - name: secret-tiger-docker
      nodeSelector:
        dedicated: master
  # volumes:
  #   - name: s3-storage
  #     persistentVolumeClaim:
  #       claimName: s3-pvc"
# ############################################################
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-db
  namespace: profile-site
  labels:
    app: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
      - name: db-container
        image: {{.Values.pgimage}}
        imagePullPolicy: Always
        ports:
        - containerPort: 5432
        resources:
          requests:
            memory: 500Mi
            cpu: 100m
          limits:
            memory: 500Mi
            cpu: 300m
      imagePullSecrets:
      - name: secret-tiger-docker
      nodeSelector:
        dedicated: master
# ############################################################
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tcp-services
  namespace: ingress-nginx
data:
  5432: "profile-site/db-service:5432"
# ############################################################
---
apiVersion: v1
kind: Service
metadata:
  name: db-service
  namespace: profile-site
spec:
  selector:
    app: db
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432
# ############################################################
---
apiVersion: v1
kind: Service
metadata:
  name: front-end-service
  namespace: profile-site
spec:
  selector:
    app: front-end
  ports:
  - protocol: TCP
    port: 3000
# ############################################################
---
apiVersion: v1
kind: Service
metadata:
  name: back-end-service
  namespace: profile-site
spec:
  selector:
    app: back-end
  ports:
  - protocol: TCP
    port: 9000
# #######################################################################################################################################
# #######################################################################################################################################